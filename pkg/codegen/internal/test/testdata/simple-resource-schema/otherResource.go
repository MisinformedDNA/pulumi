// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package example

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type OtherResource struct {
	pulumi.CustomResourceState

	Foo ResourcePtrOutput `pulumi:"foo"`
}

// NewOtherResource registers a new resource with the given unique name, arguments, and options.
func NewOtherResource(ctx *pulumi.Context,
	name string, args *OtherResourceArgs, opts ...pulumi.ResourceOption) (*OtherResource, error) {
	if args == nil {
		args = &OtherResourceArgs{}
	}
	var resource OtherResource
	err := ctx.RegisterResource("example::OtherResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOtherResource gets an existing OtherResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOtherResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OtherResourceState, opts ...pulumi.ResourceOption) (*OtherResource, error) {
	var resource OtherResource
	err := ctx.ReadResource("example::OtherResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OtherResource resources.
type otherResourceState struct {
	Foo *Resource `pulumi:"foo"`
}

type OtherResourceState struct {
	Foo PtrInput
}

func (OtherResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*otherResourceState)(nil)).Elem()
}

type otherResourceArgs struct {
	Foo *Resource `pulumi:"foo"`
}

// The set of arguments for constructing a OtherResource resource.
type OtherResourceArgs struct {
	Foo PtrInput
}

func (OtherResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*otherResourceArgs)(nil)).Elem()
}
